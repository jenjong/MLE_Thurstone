rm(list = ls()); gc()
if (Sys.info()[1]=="Linux")
{
  setwd("~/Documents/GitHub/MLE_Thurstone")
} else {
  setwd("~/GitHub/MLE_Thurstone")
}
source("./lib/pack.R")
library(test2)
p = 5
mu = seq(2,0, length = p)
Sigma = matrix(0.5, p, p)
Sigma[,p] =  Sigma[p,] = 0
diag(Sigma) = 1

n = 10
burn_num = 1e+2
restore_num = 5e+3
parallel = F
verbose = F
numCores = 6

if (parallel == T) registerDoParallel(numCores) 
set.seed(1)
z = mvrnorm(n, mu, Sigma)
# pi_mat denotes the index of items
# pi_mat[i,k]: the index of item with rank k in the ith experi
pi_mat =t(apply(z, 1, order, decreasing = T))
rankIndex_list = rankIndex_fun(pi_mat)

# initialization:: pairwise comparisons (package)
fit_mat = convToMat_fun(pi_mat)
d_mat = genDesignR_fun(p)
wvec = convToW_fun(fit_mat)
fit_model = glm.fit(x = d_mat$x, y=d_mat$y,
                    weight = wvec, family = binomial(link='probit'),
                    intercept = FALSE)
mu_e = c(fit_model$coefficients*sqrt(2),0) # note: probit reg z~N(0, 1/sqrt(2))
Sig_e = diag(1,p)
Omg_e = solve(Sig_e)
#Sig_e = Sigma
length(rankIndex_list$rank_id)
i = 3
system.time(
  {
    a = E_fun_C(i, pi_mat, rankIndex_list, mu_e, Sig_e, Omg_e,
                burn_num, restore_num*10)
  }
)
names(a)
rankIndex_list$rank_id[i]
a$Ez
a$Covz
system.time(
  {
    b = E_fun.prob_inner(i, pi_mat, rankIndex_list, mu_e, Sig_e, Omg_e,
                         burn_num, restore_num*10,
                         verbose = F)
  }
)
b$Ez
b$Covz

  

